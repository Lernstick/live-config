#!/bin/sh

## live-config(7) - System Configuration Scripts
## Copyright (C) 2006-2013 Daniel Baumann <daniel@debian.org>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.

Detect_xorg_driver ()
{
	# Side-effect: Sets _NVIDIA_VERSION and _NVIDIA_MODULE if an NVIDIA card is detected

	# without lspci this won't work
	if ! [ -x /usr/bin/lspci ]
	then
		echo "xorg-autoconfig"
		return
	fi

	# Using anything other than native xorg drivers  has (so far) failed on all systems with several Display controllers.
	# Therefore skip dirver selction if more than one Display controller is detected (last condition).
	if [ $(lspci -mn | awk '{ gsub ("\"",""); { print $2 } }' | grep -c ^03) -ne 1 ]
	then
		echo "xorg-autoconfig"
		return
	fi

	# pci-id of the first graphic card
	_DEVICE="$(lspci -mn | awk '/0300/ { print $3$4 }' | sed -e 's|\"||g' | tr [a-z] [A-Z] | head -n1)"

	# no PCI device found, hope the xorg autoconfiguration will figure it out
	if [ -z "${_DEVICE}" ]
	then
		echo "xorg-autoconfig"
		return
	fi

	# live-config specific xorg-driver overrides
	if ls /usr/share/live/config/xserver-xorg/*.ids > /dev/null 2>&1
	then
		for _OVERRIDE_IDS in /usr/share/live/config/xserver-xorg/*.ids
		do
			if [ -e "${_OVERRIDE_IDS}" ]
			then
				if grep -qs "${_DEVICE}" "${_OVERRIDE_IDS}"
				then
					echo "$(basename ${_OVERRIDE_IDS} .ids)"
					return
				fi
			fi
		done
	fi

	# xorg-driver automatic override for virtualbox
	if [ -e /var/lib/dpkg/info/virtualbox-guest-x11.list ] && echo "${_DEVICE}" | grep -qs '^80EEBEEF'
	then
		echo "vboxvideo"
		return
	fi

	# xorg-driver automatic override for fglrx
	if echo "${_DEVICE}" | grep -qs '^1002'
	then
		if grep -qs "${_DEVICE}" /usr/share/fglrx/fglrx.ids
		then
			echo "fglrx"
			return
		fi
	fi

	# xorg-driver automatic override for nvidia
	if echo "${_DEVICE}" | grep -qs -E '^(10DE|12D2)'
	then
		for _NVIDIA_IDS in /usr/lib/nvidia/current/nvidia.ids $(ls /usr/lib/nvidia/legacy-*/nvidia.ids | sort -V -r)
		do
			if [ -e "${_NVIDIA_IDS}" ]
			then
				if grep -qs "${_DEVICE}" ${_NVIDIA_IDS}
				then
					echo "nvidia-$(basename $(dirname ${_NVIDIA_IDS}))"
					return
				fi
			fi
		done

	fi

	# fall back to xorg autoconfiguration
	echo "xorg-autoconfig"
}

Enable_update_initramfs ()
{
	chmod +x /usr/sbin/update-initramfs
}

Reconfigure_glx_alternative_nvidia ()
{
	# avoid updating the the initramfs as it takes way too long and is
	# useless on live systems (we might be on completely different hardware
	# on next boot)
	trap Enable_update_initramfs 0
	chmod -x /usr/sbin/update-initramfs
	dpkg-reconfigure glx-alternative-nvidia
	Enable_update_initramfs
	trap - 0
}

Xserver_xorg ()
{
	# Checking if package is installed
	if [ ! -e /var/lib/dpkg/info/xserver-xorg.list ] ;
	then
		return
	fi

	echo -n " xserver-xorg"

	for _PARAMETER in ${_CMDLINE}
	do
		case "${_PARAMETER}" in
			live-config.keyboard-layouts=*|keyboard-layouts=*)
				LIVE_KEYBOARD_LAYOUTS="${_PARAMETER#*keyboard-layouts=}"
				;;

			live-config.keyboard-model=*|keyboard-model=*)
				LIVE_KEYBOARD_MODEL="${_PARAMETER#*keyboard-model=}"
				;;

			live-config.keyboard-options=*|keyboard-options=*)
				LIVE_KEYBOARD_OPTIONS="${_PARAMETER#*keyboard-options=}"
				;;

			live-config.keyboard-variants=*|keyboard-variants=*)
				LIVE_KEYBOARD_VARIANTS="${_PARAMETER#*keyboard-variants=}"
				;;

			live-config.xorg-xsession-manager=*|x-session-manager=*)
				LIVE_X_SESSION_MANAGER="${_PARAMETER#*x-session-manager=}"
				;;

			live-config.xorg-driver=*|xorg-driver=*)
				LIVE_XORG_DRIVER="${_PARAMETER#*xorg-driver=}"
				;;

			live-config.xorg-resolution=*|xorg-resolution=*)
				LIVE_XORG_RESOLUTION="${_PARAMETER#*xorg-resolution=}"
				;;
		esac
	done

	Configure_xserver_xorg
}

Configure_xserver_xorg ()
{
	if [ -n "${LIVE_KEYBOARD_MODEL}" ]
	then
		echo "xserver-xorg xserver-xorg/config/inputdevice/keyboard/model select ${LIVE_KEYBOARD_MODEL}" >> /tmp/debconf.live
	fi

	if [ -n "${LIVE_KEYBOARD_LAYOUTS}" ]
	then
		echo "xserver-xorg xserver-xorg/config/inputdevice/keyboard/layout select ${LIVE_KEYBOARD_LAYOUTS}" >> /tmp/debconf.live
	fi

	if [ -n "${LIVE_KEYBOARD_VARIANTS}" ]
	then
		echo "xserver-xorg xserver-xorg/config/inputdevice/keyboard/variant select ${LIVE_KEYBOARD_VARIANTS}" >> /tmp/debconf.live
	fi

	if [ -n "${LIVE_KEYBOARD_OPTIONS}" ]
	then
		echo "xserver-xorg xserver-xorg/config/inputdevice/keyboard/options string ${LIVE_KEYBOARD_OPTIONS}" >> /tmp/debconf.live
	fi

	if [ -n "${LIVE_X_SESSION_MANAGER}" ]
	then
		case "${LIVE_X_SESSION_MANAGER}" in
			none)
				rm -f /etc/X11/default-display-manager
				;;

			*)
				update-alternatives --quiet --set x-session-manager "${LIVE_X_SESSION_MANAGER}"
				;;
		esac
	fi

	if [ -z "${LIVE_XORG_DRIVER}" ]
	then
		LIVE_XORG_DRIVER=$(Detect_xorg_driver)
	fi

	mkdir -p /etc/X11/xorg.conf.d

	# Create xorg config file snippet
	if [ -e "/usr/share/live/config/xserver-xorg/${LIVE_XORG_DRIVER}.conf" ]
	then
		# xorg-driver manual override
		cp "/usr/share/live/config/xserver-xorg/${LIVE_XORG_DRIVER}.conf" /etc/X11/xorg.conf.d/zz-live-config_xserver-xorg.conf
	elif [ ${LIVE_XORG_DRIVER} = "xorg-autoconfig" ]
	then
		# Remove leftovers from previous runs of this script, ensure that xorg autoconfig works
		[ -e /etc/X11/xorg.conf.d/zz-live-config_xserver-xorg.conf ] && rm /etc/X11/xorg.conf.d/zz-live-config_xserver-xorg.conf
	else
		# xorg-driver automatic override
		case "${LIVE_XORG_DRIVER}" in
			nvidia-*)
				_DRIVER="nvidia"
				;;
			*)
				_DRIVER="${LIVE_XORG_DRIVER}"
				;;
		esac
cat > /etc/X11/xorg.conf.d/zz-live-config_xserver-xorg.conf << EOF
Section "Device"
	Identifier	"Default screen"
	Driver		"${_DRIVER}"
EndSection
EOF

	fi

	# set correct glx alternative
	if [ -e /etc/alternatives/glx ]
	then
		case "${LIVE_XORG_DRIVER}" in
			fglrx)
				update-alternatives --quiet --set glx /usr/lib/fglrx

				modprobe --ignore-install fglrx || true
				;;

			nvidia-*)
				update-alternatives --quiet --set glx /usr/lib/nvidia

				_NVIDIA_VERSION="$(echo ${LIVE_XORG_DRIVER} | cut -f 2- -d '-')"
				_NVIDIA_MODULE="$(echo nvidia-${_NVIDIA_VERSION} | sed -e 's|-current$||')"
				if [ -e /etc/alternatives/nvidia ]
				then
					update-alternatives --quiet --set nvidia /usr/lib/nvidia/${_NVIDIA_VERSION:-current}
				fi
				# reconfigure the GLX alternative package
				# see http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=702782
				Reconfigure_glx_alternative_nvidia

				modprobe --ignore-install ${_NVIDIA_MODULE:-nvidia} || true
				;;

			*)
				update-alternatives --quiet --set glx /usr/lib/mesa-diverted
				;;
		esac
	fi

	if [ -n "${LIVE_XORG_RESOLUTION}" ]
	then
		echo "xrandr -s ${LIVE_XORG_RESOLUTION} || /bin/true" >> /etc/X11/Xsession.d/21xvidemode
	else
		rm -f /etc/X11/Xsession.d/21xvidemode
	fi

	if [ -e /tmp/debconf.live ]
	then
		debconf-set-selections < /tmp/debconf.live
		rm -f /tmp/debconf.live

		dpkg-reconfigure -f noninteractive -p critical \
			xserver-xorg 2>&1 \
			| grep -v "overwriting possibly-customised configuration" \
			| grep -v "file; backup in /etc/X11/xorg.conf" || true

	fi
}

Xserver_xorg
